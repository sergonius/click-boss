class ClickBoss{static removeEvent(e){if(ClickBoss.events.has(e))return ClickBoss.events.delete(e),ClickBoss.eventCount-=1,0===ClickBoss.eventCount&&ClickBoss.removeListener(),!0;throw Error("This element does not have a handler")}static addEvent({elem:e,fn:t}){if(!e||e.nodeType!==Node.ELEMENT_NODE)throw Error('"elem" is mandatory and must be an element node');if(!t||"function"!=typeof t)throw Error('"fn" is mandatory and must be a function');if(ClickBoss.events.has(e))throw Error("This element already has a handler. Remove the old one to add a new one.");return ClickBoss.listenerAdded||ClickBoss.addListener(),ClickBoss.events.set(e,t),ClickBoss.eventCount+=1,!0}static addListener(){document.documentElement.addEventListener("click",listenerFn),ClickBoss.listenerAdded=!0}static removeListener(){document.documentElement.removeEventListener("click",listenerFn),ClickBoss.listenerAdded=!1}}function getTargetElem(e,t=ClickBoss.NODE_LIMIT){return 0!==t&&(ClickBoss.events.has(e)?e:!!e.parentNode&&getTargetElem(e.parentNode,t-1))}function listenerFn(e){const t=getTargetElem(e.target);t&&ClickBoss.events.get(t).bind(t)(e)}ClickBoss.NODE_LIMIT=10,ClickBoss.events=new WeakMap,ClickBoss.listenerAdded=!1,ClickBoss.eventCount=0;export default ClickBoss;